// Kó³ko i krzy¿yk

#include "pch.h"
#include <iostream>
#include<SFML/Graphics.hpp>
#include<SFML/Window.hpp>
#include<vector>
#include<cstdlib>
#include<ctime>
#include<sstream>
using namespace sf;
using namespace std;

class Pole
{
	public:
	string co_tam_jest;
	int zajete;
	Texture texture;
	Sprite sprite;
	int disabled;
};
void Game()
{
	RenderWindow window{ VideoMode{1280,720},"Tic-Tac-Toe" };
	Event event;
	srand(time(NULL));
	Texture kolko, pole, krzyzyk,malekolko,malykrzyzyk,obrazek;
	kolko.loadFromFile("img/o.bmp");
	pole.loadFromFile("img/nic.bmp");
	krzyzyk.loadFromFile("img/x.bmp");
	malekolko.loadFromFile("img/osmall.bmp");
	malykrzyzyk.loadFromFile("img/xsmall.bmp");
	obrazek.loadFromFile("Obrazy/kolkokrzyzyk.png");
	Pole tab[9];
	Pole wskaznik , wskaznik2,picture;
	picture.sprite = Sprite(obrazek);
	picture.sprite.setPosition(1000, 200);
	RectangleShape button,button2,button3;
	button.setSize(Vector2f(100, 50));
	button.setOutlineColor(Color::Green);
	button.setOutlineThickness(5);
	button.setPosition(1000, 570);
	button2.setSize(Vector2f(300, 50));
	button2.setOutlineColor(Color::Green);
	button2.setOutlineThickness(5);
	button2.setPosition(250, 500);
	button3.setSize(Vector2f(300, 50));
	button3.setOutlineColor(Color::Green);
	button3.setOutlineThickness(5);
	button3.setPosition(800, 500);
	Font TimesNewRoman;
	TimesNewRoman.loadFromFile("Obrazy/czcionka.ttf");
	string s = " TIC - TAC - TOE";
	Text txt(s, TimesNewRoman);
	txt.setCharacterSize(60);
	txt.setFillColor(Color::Blue);
	txt.setPosition(700, 10);
	string win = " WYGRANA";
	Text txt1(win, TimesNewRoman);
	txt1.setCharacterSize(60);
	txt1.setFillColor(Color::Green);
	txt1.setPosition(400, 400);
	string draw = " REMIS";
	Text txt2(draw, TimesNewRoman);
	txt2.setCharacterSize(60);
	txt2.setFillColor(Color::Red);
	txt2.setPosition(400, 400);
	string newgame = " NEW GAME";
	Text txt3(newgame, TimesNewRoman);
	txt3.setCharacterSize(15);
	txt3.setFillColor(Color::Blue);
	txt3.setPosition(1005, 582);
	string turagracza = " TURA GRACZA :";
	Text txt4(turagracza, TimesNewRoman);
	txt4.setCharacterSize(30);
	txt4.setFillColor(Color::Black);
	txt4.setPosition(635, 145);
	string menu = " MENU ";
	Text txt5(menu, TimesNewRoman);
	txt5.setCharacterSize(100);
	txt5.setFillColor(Color::Black);
	txt5.setPosition(230, 10);
	string napis = " OD CZEGO ZACZYNASZ ";
	Text txt6(napis, TimesNewRoman);
	txt6.setCharacterSize(30);
	txt6.setFillColor(Color::Magenta);
	txt6.setPosition(238, 250);
	string napis2 = " Z KOMPUTEREM ";
	Text txt7(napis2, TimesNewRoman);
	txt7.setCharacterSize(30);
	txt7.setFillColor(Color::Black);
	txt7.setPosition(260, 500);
	string napis3 = " WSTECZ ";
	Text txt8(napis3, TimesNewRoman);
	txt8.setCharacterSize(30);
	txt8.setFillColor(Color::Black);
	txt8.setPosition(860, 500);
	int current = 0;
	int kolko_czy_krzyzyk;
	int j = 0;
	for (int i=0; i < 9; i++)
	{
		tab[i].zajete = 0;
		tab[i].disabled = 0;
		tab[i].texture = pole;
		tab[i].sprite = Sprite(pole);
		tab[i].sprite.setPosition(300+ 100 * (i%3),50+100*j);
		if (i % 3 == 2)
		{
			j++;
		}
	}
	while (window.isOpen())
	{
		if (current == 0)
		{
			window.clear(Color::Yellow);
			window.draw(txt5);
			window.draw(txt6);
			window.draw(picture.sprite);
			window.pollEvent(event);
			wskaznik.sprite.setTexture(malekolko);
			wskaznik.sprite.setPosition(200, 300);
			window.draw(wskaznik.sprite);
			wskaznik2.sprite.setTexture(malykrzyzyk);
			wskaznik2.sprite.setPosition(600, 300);
			window.draw(wskaznik2.sprite);
			window.draw(button2);
			window.draw(txt7);
			if (Mouse::isButtonPressed(Mouse::Left))
			{
				Vector2i pos = Mouse::getPosition();
				if (pos.x > 530 and pos.x < 557 and pos.y>517 and pos.y < 545)
				{
					current = 1;
					kolko_czy_krzyzyk = 1;
				}
				else if (pos.x > 930 and pos.x < 957 and pos.y>517 and pos.y < 545)
				{
					current = 1;
					kolko_czy_krzyzyk = 0;
				}
				else if (pos.x > 576 and pos.x < 880 and pos.y>716 and pos.y < 770)
				{
					current = 2;
				}
			}
			if (event.type == Event::KeyPressed)
			{
				if (event.key.code == Keyboard::Escape)
				{
					window.close();
					break;
				}
			}
		}
		else if (current == 2)
		{
			window.clear(Color::Yellow);
			window.draw(txt5);
			window.draw(txt6);
			window.draw(picture.sprite);
			window.pollEvent(event);
			wskaznik.sprite.setTexture(malekolko);
			wskaznik.sprite.setPosition(200, 300);
			window.draw(wskaznik.sprite);
			wskaznik2.sprite.setTexture(malykrzyzyk);
			wskaznik2.sprite.setPosition(600, 300);
			window.draw(wskaznik2.sprite);
			window.draw(button3);
			window.draw(txt8);
			if (Mouse::isButtonPressed(Mouse::Left))
			{
				Vector2i pos = Mouse::getPosition();
				if (pos.x > 530 and pos.x < 557 and pos.y>517 and pos.y < 545)
				{
					current = 3;
					kolko_czy_krzyzyk = 1;
				}
				else if (pos.x > 930 and pos.x < 957 and pos.y>517 and pos.y < 545)
				{
					current = 3;
					kolko_czy_krzyzyk = 0;
				}
				else if (pos.x > 1120 and pos.x < 1420 and pos.y>714 and pos.y < 770)
					current = 0;
			}
			if (event.type == Event::KeyPressed)
			{
				if (event.key.code == Keyboard::Escape)
				{
					window.close();
					break;
				}
			}
		}
		else if (current ==1)
		{
			window.clear(Color::White);
			window.pollEvent(event);
			window.draw(button);
			window.draw(txt);
			window.draw(txt3);
			window.draw(txt4);
			window.draw(button3);
			window.draw(txt8);
			int tura = 9;
			for (int i = 0; i < 9; i++)
			{
				if (tab[i].zajete == 0)
					tura--;
			}
			if (kolko_czy_krzyzyk == 1)
			{
				wskaznik.sprite.setTexture(malekolko);
				wskaznik.sprite.setPosition(900, 150);
				window.draw(wskaznik.sprite);
			}
			else
			{
				wskaznik.sprite.setTexture(malykrzyzyk);
				wskaznik.sprite.setPosition(900, 150);
				window.draw(wskaznik.sprite);
			}
			for (int i = 0; i < 9; i++)
			{
				window.draw(tab[i].sprite);
			}
			if ((tab[0].co_tam_jest == tab[3].co_tam_jest and tab[0].co_tam_jest == tab[6].co_tam_jest and tab[0].zajete != 0) or
				(tab[1].co_tam_jest == tab[4].co_tam_jest and tab[1].co_tam_jest == tab[7].co_tam_jest and tab[1].zajete != 0) or
				(tab[2].co_tam_jest == tab[5].co_tam_jest and tab[2].co_tam_jest == tab[8].co_tam_jest and tab[2].zajete != 0) or
				(tab[0].co_tam_jest == tab[1].co_tam_jest and tab[0].co_tam_jest == tab[2].co_tam_jest and tab[0].zajete != 0) or
				(tab[3].co_tam_jest == tab[4].co_tam_jest and tab[3].co_tam_jest == tab[5].co_tam_jest and tab[3].zajete != 0) or
				(tab[6].co_tam_jest == tab[7].co_tam_jest and tab[6].co_tam_jest == tab[8].co_tam_jest and tab[6].zajete != 0) or
				(tab[0].co_tam_jest == tab[4].co_tam_jest and tab[0].co_tam_jest == tab[8].co_tam_jest and tab[0].zajete != 0) or
				(tab[2].co_tam_jest == tab[4].co_tam_jest and tab[2].co_tam_jest == tab[6].co_tam_jest and tab[2].zajete != 0)
				)
			{
				window.draw(txt1);
				for (int i = 0; i < 9; i++)
				{
					tab[i].disabled = 1;
				}
			}
			else
			{
				int zajetych = 0;
				for (int i = 0; i < 9; i++)
				{
					if (tab[i].zajete == 1)
						zajetych++;
				}
				if (zajetych == 9)
					window.draw(txt2);
			}
			if (Mouse::isButtonPressed(Mouse::Left))
			{
				Vector2i pos = Mouse::getPosition();
				int x = (pos.x - 629) / 100 + 1;
				int y = (pos.y - 269) / 100;
				if (pos.x > 629 and pos.x < 929 and pos.y>269 and pos.y < 569)
				{
					if (x + 3 * y > 0 and x + 3 * y < 10 and tab[x - 1 + 3 * y].zajete != 1)
					{
						if (kolko_czy_krzyzyk == 0)
						{
							if (tura % 2 == 1 and tab[x - 1 + 3 * y].disabled == 0)
							{
								tab[x - 1 + 3 * y].sprite.setTexture(kolko);
								tab[x - 1 + 3 * y].zajete = 1;
								tab[x - 1 + 3 * y].co_tam_jest = "kolko";
								wskaznik.sprite = Sprite(malykrzyzyk);
							}
							else if (tura % 2 == 0 and tab[x - 1 + 3 * y].disabled == 0)
							{
								tab[x - 1 + 3 * y].sprite.setTexture(krzyzyk);
								tab[x - 1 + 3 * y].zajete = 1;
								tab[x - 1 + 3 * y].co_tam_jest = "krzyzyk";
								wskaznik.sprite = Sprite(malekolko);
							}
						}
						else if (kolko_czy_krzyzyk ==1)
						{
							if (tura % 2 == 1 and tab[x - 1 + 3 * y].disabled == 0)
							{
								tab[x - 1 + 3 * y].sprite.setTexture(krzyzyk);
								tab[x - 1 + 3 * y].zajete = 1;
								tab[x - 1 + 3 * y].co_tam_jest = "krzyzyk";
								wskaznik.sprite = Sprite(malekolko);
							}
							else if (tura % 2 == 0 and tab[x - 1 + 3 * y].disabled == 0)
							{
								tab[x - 1 + 3 * y].sprite.setTexture(kolko);
								tab[x - 1 + 3 * y].zajete = 1;
								tab[x - 1 + 3 * y].co_tam_jest = "kolko";
								wskaznik.sprite = Sprite(malykrzyzyk);
							}
						}
					}
				}
				else if (pos.x > 1320 and pos.x < 1420 and pos.y >780 and pos.y < 840)
				{

					window.close();
					Game();
				}
				else if (pos.x > 1120 and pos.x < 1420 and pos.y>714 and pos.y < 770)
				{
					current = 0;
					Game();
				}
			}
			if (event.type == Event::KeyPressed)
			{
				if (event.key.code == Keyboard::Escape)
				{
					window.close();
					break;
				}
			}
		}
		else if (current == 3)
		{
			window.clear(Color::White);
			window.pollEvent(event);
			window.draw(button);
			window.draw(txt);
			window.draw(txt3);
			window.draw(button3);
			window.draw(txt8);
			int tura = 9;
			for (int i = 0; i < 9; i++)
			{
				if (tab[i].zajete == 0)
					tura--;
			}
			for (int i = 0; i < 9; i++)
			{
				window.draw(tab[i].sprite);
			}
			if ((tab[0].co_tam_jest == tab[3].co_tam_jest and tab[0].co_tam_jest == tab[6].co_tam_jest and tab[0].zajete != 0) or
				(tab[1].co_tam_jest == tab[4].co_tam_jest and tab[1].co_tam_jest == tab[7].co_tam_jest and tab[1].zajete != 0) or
				(tab[2].co_tam_jest == tab[5].co_tam_jest and tab[2].co_tam_jest == tab[8].co_tam_jest and tab[2].zajete != 0) or
				(tab[0].co_tam_jest == tab[1].co_tam_jest and tab[0].co_tam_jest == tab[2].co_tam_jest and tab[0].zajete != 0) or
				(tab[3].co_tam_jest == tab[4].co_tam_jest and tab[3].co_tam_jest == tab[5].co_tam_jest and tab[3].zajete != 0) or
				(tab[6].co_tam_jest == tab[7].co_tam_jest and tab[6].co_tam_jest == tab[8].co_tam_jest and tab[6].zajete != 0) or
				(tab[0].co_tam_jest == tab[4].co_tam_jest and tab[0].co_tam_jest == tab[8].co_tam_jest and tab[0].zajete != 0) or
				(tab[2].co_tam_jest == tab[4].co_tam_jest and tab[2].co_tam_jest == tab[6].co_tam_jest and tab[2].zajete != 0)
				)
			{
				window.draw(txt1);
				for (int i = 0; i < 9; i++)
				{
					tab[i].disabled = 1;
				}
			}
			else
			{
				int zajetych = 0;
				for (int i = 0; i < 9; i++)
				{
					if (tab[i].zajete == 1)
						zajetych++;
				}
				if (zajetych == 9)
					window.draw(txt2);
			}
			if (Mouse::isButtonPressed(Mouse::Left))
			{
				Vector2i pos = Mouse::getPosition();
				int x = (pos.x - 629) / 100 + 1;
				int y = (pos.y - 269) / 100;
				if (pos.x > 629 and pos.x < 929 and pos.y>269 and pos.y < 569)
				{
					if (x + 3 * y > 0 and x + 3 * y < 10 and tab[x - 1 + 3 * y].zajete != 1)
					{
						if (kolko_czy_krzyzyk == 0)
						{
							if (tura % 2 == 0 and tab[x - 1 + 3 * y].disabled == 0)
							{
								tab[x - 1 + 3 * y].sprite.setTexture(krzyzyk);
								tab[x - 1 + 3 * y].zajete = 1;
								tab[x - 1 + 3 * y].co_tam_jest = "krzyzyk";
							}
						}
						else if (kolko_czy_krzyzyk == 1)
						{
							if (tura % 2 == 0 and tab[x - 1 + 3 * y].disabled == 0)
							{
								tab[x - 1 + 3 * y].sprite.setTexture(kolko);
								tab[x - 1 + 3 * y].zajete = 1;
								tab[x - 1 + 3 * y].co_tam_jest = "kolko";
							}
						}
					}
				}
				else if (pos.x > 1320 and pos.x < 1420 and pos.y >780 and pos.y < 840)
				{

					window.close();
					Game();
				}
				else if (pos.x > 1120 and pos.x < 1420 and pos.y>714 and pos.y < 770)
				{
					current = 2;
					Game();
				}
			}
			 if (tura % 2 == 1 and kolko_czy_krzyzyk==0 and tura<8)
				{
					bool t = true;
					while (t)
					{
						int a = rand() % 8 + 1;
						if (tab[a].zajete != 1)
						{
							tab[a].sprite.setTexture(kolko);
							tab[a].zajete = 1;
							tab[a].co_tam_jest = "kolko";
							t = false; break;
						}
						else
							continue;
					}
				}
			 else if (tura % 2 == 1 and kolko_czy_krzyzyk ==1 and tura<8)
			 {
				bool t = true;
				while (t)
				{
					int a = rand() % 8 + 1;
					if (tab[a].zajete != 1)
					{
						tab[a].sprite.setTexture(krzyzyk);
						tab[a].zajete = 1;
						tab[a].co_tam_jest = "krzyzyk";
						t = false; break;
					}
					 else
					continue;
								 }
			}
			if (event.type == Event::KeyPressed)
			{
				if (event.key.code == Keyboard::Escape)
				{
					window.close();
					break;
				}
			}
		}
		window.display();
	}
}
int main()
{
	Game();
}
